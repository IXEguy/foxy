{"uid":"80500cdf3cb56d28","name":"Search for a rental being returned to origin","fullName":"tests.test_search.TestSearch#test_search_return_origin","historyId":"f487a1b082f495b8dbfaa48b2a7824e7","time":{"start":1662669665821,"stop":1662669690048,"duration":24227},"description":"Search with from and to airport being different","descriptionHtml":"<p>Search with from and to airport being different</p>\n","status":"failed","statusMessage":"AssertionError: Expected <True>, but was not.","statusTrace":"self = <foxy.tests.test_search.TestSearch object at 0x7f5a6f1e86d0>\nfrom_airport = 'PHX', start_date = '09/09/2022', end_date = '10/08/2022'\n\n    @allure.title(\"Search for a rental being returned to origin\")\n    @pytest.mark.parametrize(\n        \"from_airport, start_date, end_date\",\n        [element[1:] for element in search_criteria],  # strip first airport out\n    )\n    @pytest.mark.run(order=1)\n    def test_search_return_origin(self, from_airport, start_date, end_date):\n        \"\"\"Search with from and to airport being different\"\"\"\n        self.pages[\"home_page\"].dismiss_warning()\n        self.pages[\"home_page\"].dismiss_email_subscription()\n        self.pages[\"home_page\"].search(from_airport, from_airport, start_date, end_date)\n    \n        assert_that(self.pages[\"results_page\"].wait_for_search_completion()).is_true()\n    \n        expected_page_title = self.json_reader.read_from_json()[\"search\"][\n            \"results_page_title\"\n        ]\n        assert_that(expected_page_title).is_equal_to(\n            self.pages[\"results_page\"].get_title()\n        )\n>       assert_that(self.pages[\"results_page\"].results_shown()).is_true()\nE       AssertionError: Expected <True>, but was not.\n\ntests/test_search.py:56: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"allure_env","time":{"start":1662669592808,"stop":1662669592808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"properties","time":{"start":1662669592808,"stop":1662669592808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"create_driver","time":{"start":1662669662742,"stop":1662669665820,"duration":3078},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"pages","time":{"start":1662669665820,"stop":1662669665820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"test_debug_log","time":{"start":1662669665820,"stop":1662669665820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"injector","time":{"start":1662669665820,"stop":1662669665820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"Search with from and to airport being different","status":"failed","statusMessage":"AssertionError: Expected <True>, but was not.","statusTrace":"self = <foxy.tests.test_search.TestSearch object at 0x7f5a6f1e86d0>\nfrom_airport = 'PHX', start_date = '09/09/2022', end_date = '10/08/2022'\n\n    @allure.title(\"Search for a rental being returned to origin\")\n    @pytest.mark.parametrize(\n        \"from_airport, start_date, end_date\",\n        [element[1:] for element in search_criteria],  # strip first airport out\n    )\n    @pytest.mark.run(order=1)\n    def test_search_return_origin(self, from_airport, start_date, end_date):\n        \"\"\"Search with from and to airport being different\"\"\"\n        self.pages[\"home_page\"].dismiss_warning()\n        self.pages[\"home_page\"].dismiss_email_subscription()\n        self.pages[\"home_page\"].search(from_airport, from_airport, start_date, end_date)\n    \n        assert_that(self.pages[\"results_page\"].wait_for_search_completion()).is_true()\n    \n        expected_page_title = self.json_reader.read_from_json()[\"search\"][\n            \"results_page_title\"\n        ]\n        assert_that(expected_page_title).is_equal_to(\n            self.pages[\"results_page\"].get_title()\n        )\n>       assert_that(self.pages[\"results_page\"].results_shown()).is_true()\nE       AssertionError: Expected <True>, but was not.\n\ntests/test_search.py:56: AssertionError","steps":[{"name":"Dismiss GDPR type warning, if shown","time":{"start":1662669665821,"stop":1662669676852,"duration":11031},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Dismiss email promo, if shown","time":{"start":1662669676852,"stop":1662669677874,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Search with from: 'PHX' and to: 'PHX' between '09/09/2022' and '10/08/2022'","time":{"start":1662669677874,"stop":1662669679934,"duration":2060},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"from_airport","value":"'PHX'"},{"name":"to_airport","value":"'PHX'"},{"name":"start_date","value":"'09/09/2022'"},{"name":"end_date","value":"'10/08/2022'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"Wait for search to complete","time":{"start":1662669679934,"stop":1662669689983,"duration":10049},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Get results page title","time":{"start":1662669689983,"stop":1662669690032,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Results shown","time":{"start":1662669690033,"stop":1662669690048,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"attachments":[{"uid":"e4cd316d70f15baa","name":"stdout","source":"e4cd316d70f15baa.txt","type":"text/plain","size":144}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":6},"afterStages":[{"name":"create_driver::0","time":{"start":1662669690096,"stop":1662669690379,"duration":283},"status":"passed","steps":[],"attachments":[{"uid":"222a58a56ea3cb21","name":"screenshot on failure: 08/09/2022, 20:41:30","source":"222a58a56ea3cb21.png","type":"image/png","size":51055},{"uid":"ce0124bb39fcf463","name":"public ip address","source":"ce0124bb39fcf463.txt","type":"text/plain","size":13}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"test_debug_log::test_result","time":{"start":1662669690096,"stop":1662669690096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"allure_env::0","time":{"start":1662669744531,"stop":1662669744536,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"Search"},{"name":"severity","value":"blocker"},{"name":"epic","value":"Functional"},{"name":"tag","value":"run(order=1)"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_search"},{"name":"subSuite","value":"TestSearch"},{"name":"host","value":"fv-az178-528"},{"name":"thread","value":"2466-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_search"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"end_date","value":"'10/08/2022'"},{"name":"from_airport","value":"'PHX'"},{"name":"start_date","value":"'09/09/2022'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","run(order=1)"]},"source":"80500cdf3cb56d28.json","parameterValues":["'10/08/2022'","'PHX'","'09/09/2022'"]}