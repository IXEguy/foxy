{"uid":"16c7ad40b383e4da","name":"Search for a rental being dropped off at a different location","fullName":"tests.test_search.TestSearch#test_search_one_way","historyId":"da82b3fc3cc90286d8eb070e4a213f33","time":{"start":1662671722032,"stop":1662671737699,"duration":15667},"description":"Search with from and to airport being the same","descriptionHtml":"<p>Search with from and to airport being the same</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=105.0.5195.102)\nStacktrace:\n#0 0x55dc7f5fa693 <unknown>\n#1 0x55dc7f3f3b0a <unknown>\n#2 0x55dc7f3f6b57 <unknown>\n#3 0x55dc7f3f69ff <unknown>\n#4 0x55dc7f3f760a <unknown>\n#5 0x55dc7f45e14a <unknown>\n#6 0x55dc7f449922 <unknown>\n#7 0x55dc7f45d4b0 <unknown>\n#8 0x55dc7f449743 <unknown>\n#9 0x55dc7f41f533 <unknown>\n#10 0x55dc7f420715 <unknown>\n#11 0x55dc7f64a7bd <unknown>\n#12 0x55dc7f64dbf9 <unknown>\n#13 0x55dc7f62ff2e <unknown>\n#14 0x55dc7f64e9b3 <unknown>\n#15 0x55dc7f623e4f <unknown>\n#16 0x55dc7f66dea8 <unknown>\n#17 0x55dc7f66e052 <unknown>\n#18 0x55dc7f68871f <unknown>\n#19 0x7f55a9904609 <unknown>","statusTrace":"self = <foxy.tests.test_search.TestSearch object at 0x7efe326547c0>\nfrom_airport = 'LAX', to_airport = 'PHX', start_date = '09/09/2022'\nend_date = '10/08/2022'\n\n    @allure.title(\"Search for a rental being dropped off at a different location\")\n    @pytest.mark.parametrize(\n        \"from_airport, to_airport, start_date, end_date\", search_criteria\n    )\n    @pytest.mark.run(order=2)\n    def test_search_one_way(self, from_airport, to_airport, start_date, end_date):\n        \"\"\"Search with from and to airport being the same\"\"\"\n        self.pages[\"home_page\"].dismiss_warning()\n        self.pages[\"home_page\"].dismiss_email_subscription()\n        self.pages[\"home_page\"].search(from_airport, to_airport, start_date, end_date)\n    \n        # assert_that(self.pages[\"results_page\"].wait_for_search_completion()).is_true()\n    \n        expected_page_title = self.json_reader.read_from_json()[\"search\"][\n            \"results_page_title\"\n        ]\n        assert_that(expected_page_title).is_equal_to(\n>           self.pages[\"results_page\"].get_title()\n        )\n\ntests/test_search.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/results_page.py:21: in get_title\n    return self.get_text(self.RESULTS_TITLE)\npages/base_page.py:60: in get_text\n    self._highlight_element(text_object, \"green\")\npages/base_page.py:90: in _highlight_element\n    original_style = webelement.get_attribute(\"style\")\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:172: in get_attribute\n    attribute_value = self.parent.execute_script(\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:491: in execute_script\n    return self.execute(command, {\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7efe31431e10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\\\n#17 0x55dc7f66e052 \\\\u003Cunknown>\\\\n#18 0x55dc7f68871f \\\\u003Cunknown>\\\\n#19 0x7f55a9904609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=105.0.5195.102)\nE       Stacktrace:\nE       #0 0x55dc7f5fa693 <unknown>\nE       #1 0x55dc7f3f3b0a <unknown>\nE       #2 0x55dc7f3f6b57 <unknown>\nE       #3 0x55dc7f3f69ff <unknown>\nE       #4 0x55dc7f3f760a <unknown>\nE       #5 0x55dc7f45e14a <unknown>\nE       #6 0x55dc7f449922 <unknown>\nE       #7 0x55dc7f45d4b0 <unknown>\nE       #8 0x55dc7f449743 <unknown>\nE       #9 0x55dc7f41f533 <unknown>\nE       #10 0x55dc7f420715 <unknown>\nE       #11 0x55dc7f64a7bd <unknown>\nE       #12 0x55dc7f64dbf9 <unknown>\nE       #13 0x55dc7f62ff2e <unknown>\nE       #14 0x55dc7f64e9b3 <unknown>\nE       #15 0x55dc7f623e4f <unknown>\nE       #16 0x55dc7f66dea8 <unknown>\nE       #17 0x55dc7f66e052 <unknown>\nE       #18 0x55dc7f68871f <unknown>\nE       #19 0x7f55a9904609 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"properties","time":{"start":1662671646111,"stop":1662671646112,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"allure_env","time":{"start":1662671646111,"stop":1662671646111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1662671719122,"stop":1662671722028,"duration":2906},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"injector","time":{"start":1662671722029,"stop":1662671722030,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_debug_log","time":{"start":1662671722029,"stop":1662671722029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pages","time":{"start":1662671722029,"stop":1662671722029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Search with from and to airport being the same","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=105.0.5195.102)\nStacktrace:\n#0 0x55dc7f5fa693 <unknown>\n#1 0x55dc7f3f3b0a <unknown>\n#2 0x55dc7f3f6b57 <unknown>\n#3 0x55dc7f3f69ff <unknown>\n#4 0x55dc7f3f760a <unknown>\n#5 0x55dc7f45e14a <unknown>\n#6 0x55dc7f449922 <unknown>\n#7 0x55dc7f45d4b0 <unknown>\n#8 0x55dc7f449743 <unknown>\n#9 0x55dc7f41f533 <unknown>\n#10 0x55dc7f420715 <unknown>\n#11 0x55dc7f64a7bd <unknown>\n#12 0x55dc7f64dbf9 <unknown>\n#13 0x55dc7f62ff2e <unknown>\n#14 0x55dc7f64e9b3 <unknown>\n#15 0x55dc7f623e4f <unknown>\n#16 0x55dc7f66dea8 <unknown>\n#17 0x55dc7f66e052 <unknown>\n#18 0x55dc7f68871f <unknown>\n#19 0x7f55a9904609 <unknown>","statusTrace":"self = <foxy.tests.test_search.TestSearch object at 0x7efe326547c0>\nfrom_airport = 'LAX', to_airport = 'PHX', start_date = '09/09/2022'\nend_date = '10/08/2022'\n\n    @allure.title(\"Search for a rental being dropped off at a different location\")\n    @pytest.mark.parametrize(\n        \"from_airport, to_airport, start_date, end_date\", search_criteria\n    )\n    @pytest.mark.run(order=2)\n    def test_search_one_way(self, from_airport, to_airport, start_date, end_date):\n        \"\"\"Search with from and to airport being the same\"\"\"\n        self.pages[\"home_page\"].dismiss_warning()\n        self.pages[\"home_page\"].dismiss_email_subscription()\n        self.pages[\"home_page\"].search(from_airport, to_airport, start_date, end_date)\n    \n        # assert_that(self.pages[\"results_page\"].wait_for_search_completion()).is_true()\n    \n        expected_page_title = self.json_reader.read_from_json()[\"search\"][\n            \"results_page_title\"\n        ]\n        assert_that(expected_page_title).is_equal_to(\n>           self.pages[\"results_page\"].get_title()\n        )\n\ntests/test_search.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/results_page.py:21: in get_title\n    return self.get_text(self.RESULTS_TITLE)\npages/base_page.py:60: in get_text\n    self._highlight_element(text_object, \"green\")\npages/base_page.py:90: in _highlight_element\n    original_style = webelement.get_attribute(\"style\")\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:172: in get_attribute\n    attribute_value = self.parent.execute_script(\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:491: in execute_script\n    return self.execute(command, {\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7efe31431e10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\\\n#17 0x55dc7f66e052 \\\\u003Cunknown>\\\\n#18 0x55dc7f68871f \\\\u003Cunknown>\\\\n#19 0x7f55a9904609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=105.0.5195.102)\nE       Stacktrace:\nE       #0 0x55dc7f5fa693 <unknown>\nE       #1 0x55dc7f3f3b0a <unknown>\nE       #2 0x55dc7f3f6b57 <unknown>\nE       #3 0x55dc7f3f69ff <unknown>\nE       #4 0x55dc7f3f760a <unknown>\nE       #5 0x55dc7f45e14a <unknown>\nE       #6 0x55dc7f449922 <unknown>\nE       #7 0x55dc7f45d4b0 <unknown>\nE       #8 0x55dc7f449743 <unknown>\nE       #9 0x55dc7f41f533 <unknown>\nE       #10 0x55dc7f420715 <unknown>\nE       #11 0x55dc7f64a7bd <unknown>\nE       #12 0x55dc7f64dbf9 <unknown>\nE       #13 0x55dc7f62ff2e <unknown>\nE       #14 0x55dc7f64e9b3 <unknown>\nE       #15 0x55dc7f623e4f <unknown>\nE       #16 0x55dc7f66dea8 <unknown>\nE       #17 0x55dc7f66e052 <unknown>\nE       #18 0x55dc7f68871f <unknown>\nE       #19 0x7f55a9904609 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: StaleElementReferenceException","steps":[{"name":"Dismiss GDPR type warning, if shown","time":{"start":1662671722032,"stop":1662671733047,"duration":11015},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Dismiss email promo, if shown","time":{"start":1662671733047,"stop":1662671734076,"duration":1029},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Search with from: 'LAX' and to: 'PHX' between '09/09/2022' and '10/08/2022'","time":{"start":1662671734076,"stop":1662671736721,"duration":2645},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"from_airport","value":"'LAX'"},{"name":"to_airport","value":"'PHX'"},{"name":"start_date","value":"'09/09/2022'"},{"name":"end_date","value":"'10/08/2022'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get results page title","time":{"start":1662671736721,"stop":1662671737698,"duration":977},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=105.0.5195.102)\nStacktrace:\n#0 0x55dc7f5fa693 <unknown>\n#1 0x55dc7f3f3b0a <unknown>\n#2 0x55dc7f3f6b57 <unknown>\n#3 0x55dc7f3f69ff <unknown>\n#4 0x55dc7f3f760a <unknown>\n#5 0x55dc7f45e14a <unknown>\n#6 0x55dc7f449922 <unknown>\n#7 0x55dc7f45d4b0 <unknown>\n#8 0x55dc7f449743 <unknown>\n#9 0x55dc7f41f533 <unknown>\n#10 0x55dc7f420715 <unknown>\n#11 0x55dc7f64a7bd <unknown>\n#12 0x55dc7f64dbf9 <unknown>\n#13 0x55dc7f62ff2e <unknown>\n#14 0x55dc7f64e9b3 <unknown>\n#15 0x55dc7f623e4f <unknown>\n#16 0x55dc7f66dea8 <unknown>\n#17 0x55dc7f66e052 <unknown>\n#18 0x55dc7f68871f <unknown>\n#19 0x7f55a9904609 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/foxy/foxy/pages/results_page.py\", line 21, in get_title\n    return self.get_text(self.RESULTS_TITLE)\n  File \"/home/runner/work/foxy/foxy/pages/base_page.py\", line 60, in get_text\n    self._highlight_element(text_object, \"green\")\n  File \"/home/runner/work/foxy/foxy/pages/base_page.py\", line 90, in _highlight_element\n    original_style = webelement.get_attribute(\"style\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 172, in get_attribute\n    attribute_value = self.parent.execute_script(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 491, in execute_script\n    return self.execute(command, {\n  File \"/home/runner/.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 428, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/fox-6Drg89Mr-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"7aedf751839bab48","name":"stdout","source":"7aedf751839bab48.txt","type":"text/plain","size":142}],"parameters":[],"stepsCount":4,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"test_debug_log::test_result","time":{"start":1662671737845,"stop":1662671737845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver::0","time":{"start":1662671737846,"stop":1662671738299,"duration":453},"status":"passed","steps":[],"attachments":[{"uid":"e25c84b63cb58014","name":"screenshot on failure: 08/09/2022, 21:15:37","source":"e25c84b63cb58014.png","type":"image/png","size":51250},{"uid":"9576f4cb8f73bc4c","name":"public ip address","source":"9576f4cb8f73bc4c.txt","type":"text/plain","size":14}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"allure_env::0","time":{"start":1662671738301,"stop":1662671738308,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"feature","value":"Search"},{"name":"epic","value":"Functional"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_search"},{"name":"subSuite","value":"TestSearch"},{"name":"host","value":"fv-az449-50"},{"name":"thread","value":"2435-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_search"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"end_date","value":"'10/08/2022'"},{"name":"from_airport","value":"'LAX'"},{"name":"start_date","value":"'09/09/2022'"},{"name":"to_airport","value":"'PHX'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","functional"]},"source":"16c7ad40b383e4da.json","parameterValues":["'10/08/2022'","'LAX'","'09/09/2022'","'PHX'"]}